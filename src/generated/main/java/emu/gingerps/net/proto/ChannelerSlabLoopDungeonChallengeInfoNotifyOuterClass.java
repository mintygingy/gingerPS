// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChannelerSlabLoopDungeonChallengeInfoNotify.proto

package emu.gingerps.net.proto;

public final class ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass {
  private ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChannelerSlabLoopDungeonChallengeInfoNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChannelerSlabLoopDungeonChallengeInfoNotify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @return A list containing the schemeBuffIdList.
     */
    java.util.List<java.lang.Integer> getSchemeBuffIdListList();
    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @return The count of schemeBuffIdList.
     */
    int getSchemeBuffIdListCount();
    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @param index The index of the element to return.
     * @return The schemeBuffIdList at the given index.
     */
    int getSchemeBuffIdList(int index);

    /**
     * <code>uint32 dungeon_index = 10;</code>
     * @return The dungeonIndex.
     */
    int getDungeonIndex();

    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @return A list containing the conditionIdList.
     */
    java.util.List<java.lang.Integer> getConditionIdListList();
    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @return The count of conditionIdList.
     */
    int getConditionIdListCount();
    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @param index The index of the element to return.
     * @return The conditionIdList at the given index.
     */
    int getConditionIdList(int index);

    /**
     * <code>uint32 difficulty_id = 13;</code>
     * @return The difficultyId.
     */
    int getDifficultyId();

    /**
     * <code>uint32 challenge_score = 3;</code>
     * @return The challengeScore.
     */
    int getChallengeScore();
  }
  /**
   * <pre>
   * enum CmdId {
   *   option allow_alias = true;
   *   NONE = 0;
   *   CMD_ID = 8576;
   *   ENET_CHANNEL_ID = 0;
   *   ENET_IS_RELIABLE = 1;
   * }
   * </pre>
   *
   * Protobuf type {@code ChannelerSlabLoopDungeonChallengeInfoNotify}
   */
  public static final class ChannelerSlabLoopDungeonChallengeInfoNotify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ChannelerSlabLoopDungeonChallengeInfoNotify)
      ChannelerSlabLoopDungeonChallengeInfoNotifyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChannelerSlabLoopDungeonChallengeInfoNotify.newBuilder() to construct.
    private ChannelerSlabLoopDungeonChallengeInfoNotify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChannelerSlabLoopDungeonChallengeInfoNotify() {
      schemeBuffIdList_ = emptyIntList();
      conditionIdList_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChannelerSlabLoopDungeonChallengeInfoNotify();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.class, emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.Builder.class);
    }

    public static final int SCHEME_BUFF_ID_LIST_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList schemeBuffIdList_;
    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @return A list containing the schemeBuffIdList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSchemeBuffIdListList() {
      return schemeBuffIdList_;
    }
    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @return The count of schemeBuffIdList.
     */
    public int getSchemeBuffIdListCount() {
      return schemeBuffIdList_.size();
    }
    /**
     * <code>repeated uint32 scheme_buff_id_list = 6;</code>
     * @param index The index of the element to return.
     * @return The schemeBuffIdList at the given index.
     */
    public int getSchemeBuffIdList(int index) {
      return schemeBuffIdList_.getInt(index);
    }
    private int schemeBuffIdListMemoizedSerializedSize = -1;

    public static final int DUNGEON_INDEX_FIELD_NUMBER = 10;
    private int dungeonIndex_ = 0;
    /**
     * <code>uint32 dungeon_index = 10;</code>
     * @return The dungeonIndex.
     */
    @java.lang.Override
    public int getDungeonIndex() {
      return dungeonIndex_;
    }

    public static final int CONDITION_ID_LIST_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList conditionIdList_;
    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @return A list containing the conditionIdList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getConditionIdListList() {
      return conditionIdList_;
    }
    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @return The count of conditionIdList.
     */
    public int getConditionIdListCount() {
      return conditionIdList_.size();
    }
    /**
     * <code>repeated uint32 condition_id_list = 8;</code>
     * @param index The index of the element to return.
     * @return The conditionIdList at the given index.
     */
    public int getConditionIdList(int index) {
      return conditionIdList_.getInt(index);
    }
    private int conditionIdListMemoizedSerializedSize = -1;

    public static final int DIFFICULTY_ID_FIELD_NUMBER = 13;
    private int difficultyId_ = 0;
    /**
     * <code>uint32 difficulty_id = 13;</code>
     * @return The difficultyId.
     */
    @java.lang.Override
    public int getDifficultyId() {
      return difficultyId_;
    }

    public static final int CHALLENGE_SCORE_FIELD_NUMBER = 3;
    private int challengeScore_ = 0;
    /**
     * <code>uint32 challenge_score = 3;</code>
     * @return The challengeScore.
     */
    @java.lang.Override
    public int getChallengeScore() {
      return challengeScore_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (challengeScore_ != 0) {
        output.writeUInt32(3, challengeScore_);
      }
      if (getSchemeBuffIdListList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(schemeBuffIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < schemeBuffIdList_.size(); i++) {
        output.writeUInt32NoTag(schemeBuffIdList_.getInt(i));
      }
      if (getConditionIdListList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(conditionIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < conditionIdList_.size(); i++) {
        output.writeUInt32NoTag(conditionIdList_.getInt(i));
      }
      if (dungeonIndex_ != 0) {
        output.writeUInt32(10, dungeonIndex_);
      }
      if (difficultyId_ != 0) {
        output.writeUInt32(13, difficultyId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (challengeScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, challengeScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < schemeBuffIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(schemeBuffIdList_.getInt(i));
        }
        size += dataSize;
        if (!getSchemeBuffIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        schemeBuffIdListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < conditionIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(conditionIdList_.getInt(i));
        }
        size += dataSize;
        if (!getConditionIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        conditionIdListMemoizedSerializedSize = dataSize;
      }
      if (dungeonIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, dungeonIndex_);
      }
      if (difficultyId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, difficultyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify)) {
        return super.equals(obj);
      }
      emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify other = (emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify) obj;

      if (!getSchemeBuffIdListList()
          .equals(other.getSchemeBuffIdListList())) return false;
      if (getDungeonIndex()
          != other.getDungeonIndex()) return false;
      if (!getConditionIdListList()
          .equals(other.getConditionIdListList())) return false;
      if (getDifficultyId()
          != other.getDifficultyId()) return false;
      if (getChallengeScore()
          != other.getChallengeScore()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSchemeBuffIdListCount() > 0) {
        hash = (37 * hash) + SCHEME_BUFF_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSchemeBuffIdListList().hashCode();
      }
      hash = (37 * hash) + DUNGEON_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getDungeonIndex();
      if (getConditionIdListCount() > 0) {
        hash = (37 * hash) + CONDITION_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getConditionIdListList().hashCode();
      }
      hash = (37 * hash) + DIFFICULTY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDifficultyId();
      hash = (37 * hash) + CHALLENGE_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getChallengeScore();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * enum CmdId {
     *   option allow_alias = true;
     *   NONE = 0;
     *   CMD_ID = 8576;
     *   ENET_CHANNEL_ID = 0;
     *   ENET_IS_RELIABLE = 1;
     * }
     * </pre>
     *
     * Protobuf type {@code ChannelerSlabLoopDungeonChallengeInfoNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ChannelerSlabLoopDungeonChallengeInfoNotify)
        emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.class, emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.Builder.class);
      }

      // Construct using emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        schemeBuffIdList_ = emptyIntList();
        dungeonIndex_ = 0;
        conditionIdList_ = emptyIntList();
        difficultyId_ = 0;
        challengeScore_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor;
      }

      @java.lang.Override
      public emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify getDefaultInstanceForType() {
        return emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.getDefaultInstance();
      }

      @java.lang.Override
      public emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify build() {
        emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify buildPartial() {
        emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify result = new emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          schemeBuffIdList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.schemeBuffIdList_ = schemeBuffIdList_;
        if (((bitField0_ & 0x00000004) != 0)) {
          conditionIdList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.conditionIdList_ = conditionIdList_;
      }

      private void buildPartial0(emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dungeonIndex_ = dungeonIndex_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.difficultyId_ = difficultyId_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.challengeScore_ = challengeScore_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify) {
          return mergeFrom((emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify other) {
        if (other == emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify.getDefaultInstance()) return this;
        if (!other.schemeBuffIdList_.isEmpty()) {
          if (schemeBuffIdList_.isEmpty()) {
            schemeBuffIdList_ = other.schemeBuffIdList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSchemeBuffIdListIsMutable();
            schemeBuffIdList_.addAll(other.schemeBuffIdList_);
          }
          onChanged();
        }
        if (other.getDungeonIndex() != 0) {
          setDungeonIndex(other.getDungeonIndex());
        }
        if (!other.conditionIdList_.isEmpty()) {
          if (conditionIdList_.isEmpty()) {
            conditionIdList_ = other.conditionIdList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureConditionIdListIsMutable();
            conditionIdList_.addAll(other.conditionIdList_);
          }
          onChanged();
        }
        if (other.getDifficultyId() != 0) {
          setDifficultyId(other.getDifficultyId());
        }
        if (other.getChallengeScore() != 0) {
          setChallengeScore(other.getChallengeScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 24: {
                challengeScore_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 24
              case 48: {
                int v = input.readUInt32();
                ensureSchemeBuffIdListIsMutable();
                schemeBuffIdList_.addInt(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSchemeBuffIdListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  schemeBuffIdList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 64: {
                int v = input.readUInt32();
                ensureConditionIdListIsMutable();
                conditionIdList_.addInt(v);
                break;
              } // case 64
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureConditionIdListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  conditionIdList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 66
              case 80: {
                dungeonIndex_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 80
              case 104: {
                difficultyId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 104
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList schemeBuffIdList_ = emptyIntList();
      private void ensureSchemeBuffIdListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          schemeBuffIdList_ = mutableCopy(schemeBuffIdList_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @return A list containing the schemeBuffIdList.
       */
      public java.util.List<java.lang.Integer>
          getSchemeBuffIdListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(schemeBuffIdList_) : schemeBuffIdList_;
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @return The count of schemeBuffIdList.
       */
      public int getSchemeBuffIdListCount() {
        return schemeBuffIdList_.size();
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @param index The index of the element to return.
       * @return The schemeBuffIdList at the given index.
       */
      public int getSchemeBuffIdList(int index) {
        return schemeBuffIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @param index The index to set the value at.
       * @param value The schemeBuffIdList to set.
       * @return This builder for chaining.
       */
      public Builder setSchemeBuffIdList(
          int index, int value) {
        
        ensureSchemeBuffIdListIsMutable();
        schemeBuffIdList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @param value The schemeBuffIdList to add.
       * @return This builder for chaining.
       */
      public Builder addSchemeBuffIdList(int value) {
        
        ensureSchemeBuffIdListIsMutable();
        schemeBuffIdList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @param values The schemeBuffIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllSchemeBuffIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSchemeBuffIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, schemeBuffIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scheme_buff_id_list = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSchemeBuffIdList() {
        schemeBuffIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int dungeonIndex_ ;
      /**
       * <code>uint32 dungeon_index = 10;</code>
       * @return The dungeonIndex.
       */
      @java.lang.Override
      public int getDungeonIndex() {
        return dungeonIndex_;
      }
      /**
       * <code>uint32 dungeon_index = 10;</code>
       * @param value The dungeonIndex to set.
       * @return This builder for chaining.
       */
      public Builder setDungeonIndex(int value) {
        
        dungeonIndex_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 dungeon_index = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDungeonIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dungeonIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList conditionIdList_ = emptyIntList();
      private void ensureConditionIdListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          conditionIdList_ = mutableCopy(conditionIdList_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @return A list containing the conditionIdList.
       */
      public java.util.List<java.lang.Integer>
          getConditionIdListList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(conditionIdList_) : conditionIdList_;
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @return The count of conditionIdList.
       */
      public int getConditionIdListCount() {
        return conditionIdList_.size();
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @param index The index of the element to return.
       * @return The conditionIdList at the given index.
       */
      public int getConditionIdList(int index) {
        return conditionIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @param index The index to set the value at.
       * @param value The conditionIdList to set.
       * @return This builder for chaining.
       */
      public Builder setConditionIdList(
          int index, int value) {
        
        ensureConditionIdListIsMutable();
        conditionIdList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @param value The conditionIdList to add.
       * @return This builder for chaining.
       */
      public Builder addConditionIdList(int value) {
        
        ensureConditionIdListIsMutable();
        conditionIdList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @param values The conditionIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllConditionIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureConditionIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, conditionIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 condition_id_list = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearConditionIdList() {
        conditionIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int difficultyId_ ;
      /**
       * <code>uint32 difficulty_id = 13;</code>
       * @return The difficultyId.
       */
      @java.lang.Override
      public int getDifficultyId() {
        return difficultyId_;
      }
      /**
       * <code>uint32 difficulty_id = 13;</code>
       * @param value The difficultyId to set.
       * @return This builder for chaining.
       */
      public Builder setDifficultyId(int value) {
        
        difficultyId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 difficulty_id = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDifficultyId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        difficultyId_ = 0;
        onChanged();
        return this;
      }

      private int challengeScore_ ;
      /**
       * <code>uint32 challenge_score = 3;</code>
       * @return The challengeScore.
       */
      @java.lang.Override
      public int getChallengeScore() {
        return challengeScore_;
      }
      /**
       * <code>uint32 challenge_score = 3;</code>
       * @param value The challengeScore to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeScore(int value) {
        
        challengeScore_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 challenge_score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        challengeScore_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ChannelerSlabLoopDungeonChallengeInfoNotify)
    }

    // @@protoc_insertion_point(class_scope:ChannelerSlabLoopDungeonChallengeInfoNotify)
    private static final emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify();
    }

    public static emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChannelerSlabLoopDungeonChallengeInfoNotify>
        PARSER = new com.google.protobuf.AbstractParser<ChannelerSlabLoopDungeonChallengeInfoNotify>() {
      @java.lang.Override
      public ChannelerSlabLoopDungeonChallengeInfoNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ChannelerSlabLoopDungeonChallengeInfoNotify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelerSlabLoopDungeonChallengeInfoNotify> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.gingerps.net.proto.ChannelerSlabLoopDungeonChallengeInfoNotifyOuterClass.ChannelerSlabLoopDungeonChallengeInfoNotify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1ChannelerSlabLoopDungeonChallengeInfoN" +
      "otify.proto\"\254\001\n+ChannelerSlabLoopDungeon" +
      "ChallengeInfoNotify\022\033\n\023scheme_buff_id_li" +
      "st\030\006 \003(\r\022\025\n\rdungeon_index\030\n \001(\r\022\031\n\021condi" +
      "tion_id_list\030\010 \003(\r\022\025\n\rdifficulty_id\030\r \001(" +
      "\r\022\027\n\017challenge_score\030\003 \001(\rB\030\n\026emu.ginger" +
      "ps.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ChannelerSlabLoopDungeonChallengeInfoNotify_descriptor,
        new java.lang.String[] { "SchemeBuffIdList", "DungeonIndex", "ConditionIdList", "DifficultyId", "ChallengeScore", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
